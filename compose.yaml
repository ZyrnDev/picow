services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    ports:
        - "${TRAEFIK_PORT:-80}:80"
    command:
        - "--providers.docker=true"
    volumes:
        - /var/run/docker.sock:/var/run/docker.sock
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.rule=PathPrefix(`/`)"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
    volumes:
      # Data storage
      - grafana-data:/var/lib/grafana

      # Configuration files
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.rule=PathPrefix(`/prometheus`)"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
    volumes:
      - prometheus-data:/prometheus

      # Configuration files
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    entrypoint:
      - "/bin/prometheus"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.external-url=/prometheus"
      - "--web.route-prefix=/prometheus"

volumes:
  grafana-data:
  prometheus-data:
